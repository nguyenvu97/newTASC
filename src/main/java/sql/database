1)Trong một câu query, thứ tự thực hiện của các thành phần :
FROM
ON
JOIN
WHERE
GROUP BY
WITH CUBE or WITH ROLLUP
HAVING
SELECT
DISTINCT
ORDER BY
TOP
2)Có 6 loại join : 
+)cross join : SELECT * FROM table1 CROSS JOIN table2;   
+)left join : SELECT * FROM table1 LEFT JOIN table2 ON table1.id = table2.table1_id;  Lấy hết dữ liệu bảng bên trái (cạnh from ) nếu bẳng bên phải ko co du lieu la null 
+)right join : SELECT * FROM table1 RIGHT JOIN table2 ON table1.id = table2.table1_id; nguoc lai vs left join 
+)join : SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.table1_id; join 2 bnag lay data cua ca 2 bang phai co data ko nhan gia tri null tu 1 trogn 2 bang 
+)full join : SELECT * FROM table1 FULL JOIN table2 ON table1.id = table2.table1_id;  ko khac j select * from t1,t2
+)self join : SELECT a.*, b.* FROM table1 a JOIN table1 b ON a.id = b.related_id;  truy van vs chinh bang do 
3) Sub query : có 4 loại 
+1) 1 row 1 colum  : SELECT * FROM employees WHERE salary > (SELECT MAX(salary) FROM employees WHERE department_id = 10);
+2) 1 row n colum : SELECT * FROM employees WHERE (department_id, job_id) = (SELECT department_id, job_id FROM jobs WHERE job_title = 'Manager');
+3) 1 colum n row  : SELECT * FROM employees WHERE department_id IN (SELECT department_id FROM departments WHERE location_id = 1000);
+4) sub table : SELECT e.* FROM employees e JOIN (SELECT department_id, COUNT(*) AS num_employees FROM employees GROUP BY department_id) d ON e.department_id = d.department_id WHERE d.num_employees > 5;
4) Ranking : ROW_NUMBER, RANK, DENSE_RANK 
ROW_NUMBER :  Population nếu gia trị trùng nhau thi nó van sắp xếp tuàn tự 
RANK:  Nếu 2 gia tri == nhau thi rank se là như nhau  vi du idN = idN về măt gia trị thi thư tu la 1,1 gia tri 2 se bi mất đi vud thể la 1,1,3
DENSE_RANK:   Nếu 2 gia tri == nhau thi rank se là như nhau  vi du idN = idN về măt gia trị thi thư tu la 1,1 thi gia tri 2 se ko bi mat di vi du 1,1,2
vi du : select * ,
Row_Number() over (order by Population desc) as Population_RN,
RANK() over (order By Population desc) as Population_Rank,
DENSE_RANK() over (order By Population desc) as Population_Rank
 from city
 PROCEDURE : 
    mục đích : + )nếu gai tri đâu vào không đổi thi chi can vao store procedure them điều kiện tiết kiệm tg khi ko phai sưa trên code 
                +)SQL đã được biên dịch trước đó lên ko phai đọc lai giảm tg tài nguyên
                +) stored procedures có thể thực thi nhanh hơn so với việc gửi nhiều câu lệnh SQL riêng lẻ
                +) Tất cả logic SQL được tập trung trong thủ tục, giúp cho việc bảo trì và quản lý trở nên đơn giản hơn.
 
  java co 3 canh goi procedre : dung anition  @Procedure() , @Query , dung jdbc gọi lên  , NamedStoredProcedureQuery

